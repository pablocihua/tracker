{
  "_args": [
    [
      {
        "raw": "angular2-localstorage@git://github.com/dranes/angular2-localstorage.git",
        "scope": null,
        "escapedName": "angular2-localstorage",
        "name": "angular2-localstorage",
        "rawSpec": "git://github.com/dranes/angular2-localstorage.git",
        "spec": "git://github.com/dranes/angular2-localstorage.git",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:dranes/angular2-localstorage.git",
          "sshUrl": "git+ssh://git@github.com/dranes/angular2-localstorage.git",
          "httpsUrl": "git+https://github.com/dranes/angular2-localstorage.git",
          "gitUrl": "git://github.com/dranes/angular2-localstorage.git",
          "shortcut": "github:dranes/angular2-localstorage",
          "directUrl": "https://raw.githubusercontent.com/dranes/angular2-localstorage/master/package.json"
        }
      },
      "/Users/luisheumann/AngularTreck"
    ]
  ],
  "_from": "git://github.com/dranes/angular2-localstorage.git",
  "_id": "angular2-localstorage@0.4.0",
  "_inCache": true,
  "_location": "/angular2-localstorage",
  "_phantomChildren": {},
  "_requested": {
    "raw": "angular2-localstorage@git://github.com/dranes/angular2-localstorage.git",
    "scope": null,
    "escapedName": "angular2-localstorage",
    "name": "angular2-localstorage",
    "rawSpec": "git://github.com/dranes/angular2-localstorage.git",
    "spec": "git://github.com/dranes/angular2-localstorage.git",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:dranes/angular2-localstorage.git",
      "sshUrl": "git+ssh://git@github.com/dranes/angular2-localstorage.git",
      "httpsUrl": "git+https://github.com/dranes/angular2-localstorage.git",
      "gitUrl": "git://github.com/dranes/angular2-localstorage.git",
      "shortcut": "github:dranes/angular2-localstorage",
      "directUrl": "https://raw.githubusercontent.com/dranes/angular2-localstorage/master/package.json"
    }
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "git://github.com/dranes/angular2-localstorage.git#074f4764dbe2e524dd399df351632e1d679a0c7a",
  "_shasum": "781c5f56b58514b565469e6b1a180d83012c22d9",
  "_shrinkwrap": null,
  "_spec": "angular2-localstorage@git://github.com/dranes/angular2-localstorage.git",
  "_where": "/Users/luisheumann/AngularTreck",
  "author": {
    "name": "Marc J. Schmidt"
  },
  "bugs": {
    "url": "https://github.com/marcj/angular2-localstorage/issues"
  },
  "dependencies": {},
  "description": "Angular2 decorator to save and restore class properties automatically from LocalStorage.",
  "devDependencies": {
    "@angular/core": "^2.0.0",
    "es6-shim": "^0.35.1",
    "reflect-metadata": "0.1.8",
    "rxjs": "5.0.0-beta.12",
    "tslint": "^3.15.1",
    "typings": "^1.3.3",
    "zone.js": "0.6.23"
  },
  "gitHead": "074f4764dbe2e524dd399df351632e1d679a0c7a",
  "homepage": "https://github.com/marcj/angular2-localstorage",
  "keywords": [
    "Angular2",
    "LocalStorage"
  ],
  "license": "ISC",
  "main": "index.js",
  "name": "angular2-localstorage",
  "optionalDependencies": {},
  "readme": "# Angular2 @LocalStorage\n\nThis little Angular2/typescript decorator makes it super easy to save and restore *automatically* a variable state in your\ndirective (class property) using HTML5' LocalStorage.\n\n## Seeking new maintainer\n\nThis project is not maintained. Please consider taking it over. More information at https://github.com/open-source-chest/take-it-over.\n\n## Use\n\n1. Download the library using npm or github: `npm install --save angular2-localstorage`\n2. Register the LocalStorage in your `boot.ts`:\n    ```typescript\n    import {LocalStorageService, LocalStorageSubscriber} from 'angular2-localstorage/LocalStorageEmitter';\n    var appPromise = bootstrap(MyRootAppComponent, [ LocalStorageService ]);\n    \n    // register LocalStorage, this registers our change-detection.\n    LocalStorageSubscriber(appPromise);\n    ```\n    or in your root component:\n    ```typescript\n    import {Component} from \"angular2/core\";\n    import {LocalStorageService} from \"angular2-localstorage/LocalStorageEmitter\";\n\n    @Component({\n        provider: [LocalStorageService]\n    })\n    export class AppRoot{\n        constructor(storageService: LocalStorageService){}\n    ...\n    }\n    ```\n\n\n3. Use the `LocalStorage` decorator\n```typescript\nimport {LocalStorage, SessionStorage} from \"angular2-localstorage/WebStorage\";\n\nclass MySuperComponent {\n    @LocalStorage() public lastSearchQuery:Object = {};\n    @LocalStorage('differentLocalStorageKey') public lastSearchQuery:Object = {};\n}\n```\n\n**Note**: Define always a default value at the property you are using `@LocalStorage`.\n\n**Note**: The localstorage key is per default the property name. Define the first argument of `@LocalStorage` to set different one.\n\n**Note**: Please don't store circular structures as this library uses JSON.stringify to encode before using LocalStorage.\n\n## Examples\n\n```typescript\n@Component({\n    selector: 'app-login',\n    template: `\n<form>\n    <div>\n        <input type=\"text\" [(ngModel)]=\"username\" placeholder=\"Username\" />\n        <input type=\"password\" [(ngModel)]=\"password\" placeholder=\"Password\" />\n    </div>\n    \n    <input type=\"checkbox\" [(ngModel)]=\"rememberMe\" /> Keep me logged in\n\n    <button type=\"submit\">Login</button>\n</form>\n    `\n})\nclass AppLoginComponent {\n    //here happens the magic. `username` is always restored from the localstorage when you reload the site\n    @LocalStorage() public username:string = '';\n    \n    public password:string;\n    \n    //here happens the magic. `rememberMe` is always restored from the localstorage when you reload the site\n    @LocalStorage() public rememberMe:boolean = false;\n}\n```\n\n\n```typescript\n@Component({\n    selector: 'admin-menu',\n    template: `\n<div *ngFor=\"#menuItem of menuItems() | mapToIterable; #i = index\">\n    <h2 (click)=\"hiddenMenuItems[i] = !!!hiddenMenuItems[i]\">\n        {{i}}: {{category.label}}\n    </h2>\n    <div style=\"padding-left: 15px;\" [hidden]=\"hiddenMenuItems[i]\">\n        <a href>Some sub menu item 1</a>\n        <a href>Some sub menu item 2</a>\n        <a href>Some sub menu item 3</a>\n    </div>\n</div>\n    `\n})\nclass AdminMenuComponent {\n    public menuItems = [{title: 'Menu1'}, {title: 'Menu2'}, {title: 'Menu3'}];\n\n    //here happens the magic. `hiddenMenuItems` is always restored from the localstorage when you reload the site\n    @LocalStorage() public hiddenMenuItems:Array<boolean> = [];\n    \n    //here happens the magic. `profile` is always restored from the sessionStorage when you reload the site from the current tab/browser. This is perfect for more sensitive information that shouldn't stay once the user closes the browser.\n    @SessionStorage() public profile:any = {};\n}\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/marcj/angular2-localstorage.git"
  },
  "scripts": {
    "lint": "tslint ./*.ts -t verbose",
    "postinstall": "typings install",
    "test": "echo \"Error: no test specified\" && exit 1",
    "tsc": "tsc"
  },
  "version": "0.4.0"
}
